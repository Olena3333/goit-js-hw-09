{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAU,CACdC,SAAU,gBACVC,QAAS,OACTC,kBAAmB,cAKrB,IAAIC,EACAC,EACAC,EAsBJ,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,EAAUe,MAAAR,IAEpBG,EAAO,C,SAAEV,EAAUe,MAAAR,GAAQ,GAE5BA,EAAM,G,CAnCES,SAASC,cAAc,SAM/BC,iBAAiB,UAAUC,IAChCA,EAAEC,iBACFjB,EAAQkB,OAAOF,EAAEG,cAAcC,SAASR,MAAMS,OAC9CnB,EAAOgB,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAC5CpB,EAASiB,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAChD,IAAK,IAAIG,EAAI,EAAGA,GAAKvB,EAAQuB,GAAK,EAChCrB,EAAcqB,EAAGxB,GACdyB,MAAK,EAAC5B,SAAEA,EAAUe,MAAAc,MACjBC,EAAAjC,GAASkC,OAAOC,QAAQ,GAAGhC,OAAc6B,IAAS9B,GAClDkC,QAAQC,IAAI,uBAAqBlC,QAAiB6B,MAAU,IAE7DM,OAAM,EAACnC,SAAEA,EAAUe,MAAAqB,MAClBN,EAAAjC,GAASkC,OAAOM,QAAQ,GAAGrC,OAAcoC,IAASrC,GAClDkC,QAAQC,IAAI,sBAAoBlC,QAAeoC,MAAU,IAE7DjC,GAASE,EAEXc,EAAEG,cAAcgB,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst options = {\n  position: 'center-bottom',\n  distans: '15px',\n  cssAnimationStile: 'from-right',\n};\n\nconst formEl = document.querySelector('.form');\n\nlet delay;\nlet amount;\nlet step;\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  delay = Number(e.currentTarget.elements.delay.value);\n  step = Number(e.currentTarget.elements.step.value);\n  amount = Number(e.currentTarget.elements.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`${position} - ${delay}`, options);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`${position} - ${delay}`, options);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  e.currentTarget.reset();\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$options","position","distans","cssAnimationStile","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$step","$47d4ff9957288465$var$createPromise","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","elements","value","step","amount","i","then","delay1","$parcel$interopDefault","Notify","success","console","log","catch","delay2","warning","reset"],"version":3,"file":"03-promises.94bd4195.js.map"}